name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      from_pyproject:
        description: 'Use version from pyproject.toml'
        required: true
        type: boolean
      release_version:
        description: 'Or tag name for the release'
        required: false

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python environment
        uses: ./.github/actions/setup-python-poetry # Reference your composite action
        with:
          python-version: '3.9' # Specify the Python version you want to use
          cache-key-prefix: 'test-env'

      - name: Publish to PyPI
        id: publish
        if: github.event.inputs.publish == 'true'
        run: |
          # Extract version from pyproject.toml
          VERSION=$(grep -m 1 'version = ' pyproject.toml | cut -d '"' -f 2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Run publish script
          source .venv/bin/activate && ./bin/publish

          # Create annotation with release link
          echo "::notice title=PyPI Release::Package published to https://pypi.org/project/nanodoc/$VERSION/"
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          TWINE_NON_INTERACTIVE: 1

      - name: Determine Version
        id: determine_version
        shell: bash
        run: |
          echo "release_version=$(poetry version -s)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ steps.determine_version.outputs.release_version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          prerelease: true
