version: 2

project_name: dotcat

builds:
  - id: dotcat
    main: ./cmd/app
    binary: "{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}"
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}
    env:
      - CGO_ENABLED=0
    goos: [linux, windows, darwin]
    goarch: [amd64, arm64]
    ignore:
      - goos: windows
        goarch: arm64

archives:
  - formats: [tar.gz]
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format_overrides:
      - goos: windows
        format: zip
    files:
      - "README.md"
      - "LICENSE"
      - "completions/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.bash"
      - "completions/_{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}"
      - "completions/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.fish"
      - "man/man1/*"

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
      - "Merge pull request"
      - "Merge branch"

brews:
  - name: "{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}"
    repository:
      owner: adebert
      name: homebrew-tools
      token: "{{ .Env.HOMEBREW_TAP_TOKEN }}"
    directory: "Formula"
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    homepage: "https://github.com/adebert/dotcat"
    description: "A CLI utility for reading values from structured data files."
    license: "MIT"
    test: |
      system "#{bin}/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }} --version"
    install: |
      bin.install "{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}"
      man1.install "man/man1/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.1"
      bash_completion.install "completions/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.bash" => "{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}"
      zsh_completion.install "completions/_{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}" => "_{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}"
      fish_completion.install "completions/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.fish"

# nFPM packages (deb, rpm, etc.)
# https://goreleaser.com/customization/nfpm/
nfpms:
  - id: dotcat-deb
    package_name: "{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}"
    formats:
      - deb
    builds:
      - dotcat
    vendor: "Arthur Debert"
    homepage: "https://github.com/adebert/dotcat"
    maintainer: "Arthur Debert <arthur-debert@users.noreply.github.com>"
    description: "A CLI utility for reading values from structured data files."
    license: "MIT"
    contents:
      - src: ./man/man1/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.1
        dst: /usr/share/man/man1/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.1.gz
        packager: deb
        file_info:
          mode: 0644
      - src: ./completions/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.bash
        dst: /usr/share/bash-completion/completions/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}
        file_info:
          mode: 0644
      - src: ./completions/_{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}
        dst: /usr/share/zsh/site-functions/_{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}
        file_info:
          mode: 0644
      - src: ./completions/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.fish
        dst: /usr/share/fish/vendor_completions.d/{{ if .Env.PKG_NAME }}{{ .Env.PKG_NAME }}{{ else }}dotcat{{ end }}.fish
        file_info:
          mode: 0644

env:
  - PKG_NAME={{ .Env.PKG_NAME }}
